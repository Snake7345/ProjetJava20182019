package venteVoiture.connection;

import java.io.Serializable;
import javax.persistence.*;
import java.util.List;


/**
 * The persistent class for the adresse database table.
 * 
 */
@Entity
@Table(name="adresse")
@NamedQuery(name="Adresse.findAll", query="SELECT a FROM Adresse a")
public class Adresse implements Serializable {
	private static final long serialVersionUID = 1L;

	@EmbeddedId
	private AdressePK id;

	@Column(nullable=false, length=5)
	private String boitePostalAdresse;

	@Column(nullable=false, length=80)
	private String rueAdresse;

	//bi-directional many-to-one association to Cp
	@ManyToOne
	@JoinColumn(name="CP_IdCP", nullable=false, insertable=false, updatable=false)
	private Cp cp;

	//bi-directional many-to-many association to Entrepot
	@ManyToMany
	@JoinTable(
		name="adresse_entrepot"
		, joinColumns={
			@JoinColumn(name="Adresse_CP_IdCP", referencedColumnName="CP_IdCP", nullable=false),
			@JoinColumn(name="Adresse_IdAdresse", referencedColumnName="IdAdresse", nullable=false)
			}
		, inverseJoinColumns={
			@JoinColumn(name="Entrepot_idEntrepot", nullable=false)
			}
		)
	private List<Entrepot> entrepots;

	//bi-directional many-to-one association to AdresseEntrepot
	@OneToMany(mappedBy="adresse")
	private List<AdresseEntrepot> adresseEntrepots;

	//bi-directional many-to-many association to Personne
	@ManyToMany(mappedBy="adresses")
	private List<Personne> personnes;

	//bi-directional many-to-one association to PersonneAdresse
	@OneToMany(mappedBy="adresse")
	private List<PersonneAdresse> personneAdresses;

	public Adresse() {
	}

	public AdressePK getId() {
		return this.id;
	}

	public void setId(AdressePK id) {
		this.id = id;
	}

	public String getBoitePostalAdresse() {
		return this.boitePostalAdresse;
	}

	public void setBoitePostalAdresse(String boitePostalAdresse) {
		this.boitePostalAdresse = boitePostalAdresse;
	}

	public String getRueAdresse() {
		return this.rueAdresse;
	}

	public void setRueAdresse(String rueAdresse) {
		this.rueAdresse = rueAdresse;
	}

	public Cp getCp() {
		return this.cp;
	}

	public void setCp(Cp cp) {
		this.cp = cp;
	}

	public List<Entrepot> getEntrepots() {
		return this.entrepots;
	}

	public void setEntrepots(List<Entrepot> entrepots) {
		this.entrepots = entrepots;
	}

	public List<AdresseEntrepot> getAdresseEntrepots() {
		return this.adresseEntrepots;
	}

	public void setAdresseEntrepots(List<AdresseEntrepot> adresseEntrepots) {
		this.adresseEntrepots = adresseEntrepots;
	}

	public AdresseEntrepot addAdresseEntrepot(AdresseEntrepot adresseEntrepot) {
		getAdresseEntrepots().add(adresseEntrepot);
		adresseEntrepot.setAdresse(this);

		return adresseEntrepot;
	}

	public AdresseEntrepot removeAdresseEntrepot(AdresseEntrepot adresseEntrepot) {
		getAdresseEntrepots().remove(adresseEntrepot);
		adresseEntrepot.setAdresse(null);

		return adresseEntrepot;
	}

	public List<Personne> getPersonnes() {
		return this.personnes;
	}

	public void setPersonnes(List<Personne> personnes) {
		this.personnes = personnes;
	}

	public List<PersonneAdresse> getPersonneAdresses() {
		return this.personneAdresses;
	}

	public void setPersonneAdresses(List<PersonneAdresse> personneAdresses) {
		this.personneAdresses = personneAdresses;
	}

	public PersonneAdresse addPersonneAdress(PersonneAdresse personneAdress) {
		getPersonneAdresses().add(personneAdress);
		personneAdress.setAdresse(this);

		return personneAdress;
	}

	public PersonneAdresse removePersonneAdress(PersonneAdresse personneAdress) {
		getPersonneAdresses().remove(personneAdress);
		personneAdress.setAdresse(null);

		return personneAdress;
	}

}